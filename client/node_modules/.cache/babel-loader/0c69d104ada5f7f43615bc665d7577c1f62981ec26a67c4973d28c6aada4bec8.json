{"ast":null,"code":"var _jsxFileName = \"/Users/sidharthabolla/MySchoolBus/client/src/components/TabHeadings/TabHeadings.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport styles from './TabHeadings.module.scss';\n\n// const customStyles = {\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)',\n//   },\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TabHeadings() {\n  _s();\n  const userTypes = {\n    0: 'STUDENT',\n    1: 'DRIVER'\n  };\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [userType, setUserType] = useState(0);\n  function openModal() {\n    setIsOpen(true);\n  }\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.TabHeadingsDiv,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Tabs,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.Tab,\n        onClick: openModal,\n        children: \"ADD USER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onAfterOpen: afterOpenModal,\n        onRequestClose: closeModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          ref: _subtitle => subtitle = _subtitle,\n          children: [\"ADD \", userTypes[userType]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), Object.keys(userTypes).map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setUserType(user),\n            children: userTypes[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"CREATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TabHeadings, \"xdTK+YuKlnYfea4FtmQGLUSnPB0=\");\n_c = TabHeadings;\nvar _c;\n$RefreshReg$(_c, \"TabHeadings\");","map":{"version":3,"names":["React","useEffect","useState","Modal","styles","jsxDEV","_jsxDEV","TabHeadings","_s","userTypes","subtitle","modalIsOpen","setIsOpen","userType","setUserType","openModal","afterOpenModal","style","color","closeModal","className","TabHeadingsDiv","children","Tabs","Tab","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onAfterOpen","onRequestClose","customStyles","contentLabel","ref","_subtitle","Object","keys","map","user","index","_c","$RefreshReg$"],"sources":["/Users/sidharthabolla/MySchoolBus/client/src/components/TabHeadings/TabHeadings.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport styles from './TabHeadings.module.scss';\n\n// const customStyles = {\n//   content: {\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)',\n//   },\n// };\n\nexport function TabHeadings()  {\n  const userTypes = { \n    0 : 'STUDENT',\n    1 : 'DRIVER'\n  }\n\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [userType, setUserType] = useState(0);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return(\n    <div className={styles.TabHeadingsDiv}>\n     <div className={styles.Tabs}>\n        <span className={styles.Tab} onClick={openModal}>ADD USER</span>\n        {/* <span className={styles.Tab}>Delete User</span> */}\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2 ref={(_subtitle) => (subtitle = _subtitle)}>ADD {userTypes[userType]}</h2>\n          <button onClick={closeModal}>close</button>\n          {Object.keys(userTypes).map((user, index) => {\n            return (\n              <div onClick={() => setUserType(user)}>{userTypes[index]}</div>\n            )\n          })}\n          <form>\n            <input />\n            <button>CREATE</button>\n          </form>\n        </Modal>\n      </div>\n    </div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}